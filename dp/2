#include <bits/stdc++.h>
int n, k;
int coins[(int)1e3];
int dp[(int)1e3][(int)1e5];

int cc_nodp (int cp, int rem) {
  if (rem < 0 || cp >= n)
    return 0x3f3f3f3f;
  if (rem == 0)
    return 0;
  return std::min (cc_nodp (cp + 1, rem - coins[cp]) + 1, cc_nodp (cp + 1, rem));
}

int cc(int cp, int rem) {
  if (dp[cp][rem])
    return dp[cp][rem];
  if (rem == 0) {
    return dp[cp][rem] = 0;
  }
  if (rem < 0 || cp >= n) {
    return dp[cp][rem] = 0x3f3f3f3f;
  }
  return dp[cp][rem] = std::min (cc (cp + 1, rem - coins[cp]) + 1, cc (cp + 1, rem));
}

int main () {
  scanf ("%d%d", &n, &k);
  for (int i = 0; i < n; i++)
    scanf ("%d", coins + i);

  cc (0, k);

  for (int i = 0; i < n; i++) {
    for (int j = 0; j < k; j++)
      printf ("%d ", dp[i][j]);
    puts("");
  }

  return 0;
}
